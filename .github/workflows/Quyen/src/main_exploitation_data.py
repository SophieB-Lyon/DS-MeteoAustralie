# -*- coding: utf-8 -*-

"""
@created: 09/2023
@updated:
@author: quyen@marcaud.fr
"""

import os

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from src.data_viz import Visualisation
from src.utils import horizontal_bar_plot, number_of_nan

fichier_data = "./data/weatherAUS.csv"

df_data = pd.read_csv(fichier_data)


def tweak_data(df: pd.DataFrame):
    """
    :param df:
    :return:
    """
    return (df
            .replace({'Yes': 1, 'No': 0})
            .set_index(pd.to_datetime(df.Date))
            .drop('Date', axis=1)
            )


df_cleaned_data = tweak_data(df_data)
viz = Visualisation(df_cleaned_data)
# =====================================================================================================================
# Variables catégorielles
# =====================================================================================================================

# Location

fig = viz.barh_value_counts(["Location"], with_annotate=False)
plt.show()
fichier_out = "./output/Bar_plot_Location.png"
fig.savefig(fichier_out)

# Les 3 autres variables catégorielles
var_cat = list(df_cleaned_data.select_dtypes(include=["category", "object"]).columns)
var_cat.remove("Location")
fig = viz.barh_value_counts(var_cat, nrows=1, ncols=3, fig_size=(14, 8), with_annotate=False)

fichier_out = "./output/Bar_plot_Wind_dir.png"
fig.savefig(fichier_out)

# =====================================================================================================================
# Boxplot des variables numériques
# =====================================================================================================================

quantitative_features = list(df_cleaned_data.select_dtypes(include=np.number).columns)
quantitative_features.remove("RainToday")
quantitative_features.remove("RainTomorrow")
print(quantitative_features)

fig_box = viz.boxplot(list_col=quantitative_features, fig_size=(20, 20), nrows=4, ncols=4,
                      title="Boxplots des variables quantatives")

fichier_out = "./output/Boxplot_variables_numeriques.png"
fig_box.savefig(fichier_out)

# =====================================================================================================================
# Histogram des variables numériques
# =====================================================================================================================

fig_hist = viz.histogram(list_col=quantitative_features, fig_size=(20, 20), nrows=4, ncols=4,
                         title="Histograms des variables quantatives")

fichier_out = "./output/Histogram_variables_numeriques.png"
fig_hist.savefig(fichier_out)

# =====================================================================================================================
# Corrélation
# =====================================================================================================================
quantitative_features = list(df_cleaned_data.select_dtypes(include=np.number).columns)

fig_corr = viz.heatmap_correlation(list_col=quantitative_features, fig_size=(20, 20),
                                   title="Corrélation entre les variables numériques")

fichier_out = "./output/Correlation_variables_numeriques_originales.png"
fig_corr.savefig(fichier_out)

# =====================================================================================================================
# Déterminer le % de données manquantes pour chaque colonne
# =====================================================================================================================

fig = viz.barh_missing_by_column(fig_size=(14, 14),
                                 title="% de données manquantes avant nettoyage", ascending=False)

fichier_out = "./output/Barplot_missing_data_by_column.png"
fig.savefig(fichier_out)

# =====================================================================================================================
# Déterminer le % de données manquantes pour chaque ligne
# =====================================================================================================================

fig = viz.histogram_missing_by_row(bins=[10, 20, 30, 40, 50, 99])

fichier_out = "./output/Barplot_missing_by_row.png"
fig.savefig(fichier_out)
# =====================================================================================================================
# Missingno
# =====================================================================================================================

# matrix of nullity

fig = viz.matrix_of_nullity(fig_size=(25, 14))
fichier_out = "./output/matrix_of_nullity.png"
fig.savefig(fichier_out)

# heatmap of nullity corrélation
fig = viz.heatmap_of_nullity(fig_size=(20, 14))
fichier_out = "./output/heatmap_of_nullity_correlation.png"
fig.savefig(fichier_out)

# Dendrogram
fig = viz.dendrogram(fig_size=(20, 14))
fichier_out = "./output/dendrogram_of_nullity.png"
fig.savefig(fichier_out)
